# -*- coding: utf-8 -*-
"""Linear regration for jet engine project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15x1_Q4UbfsH8ZD3tXSZYM8KyEA_p7eLa

Impo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

column_names = ['engine_id', 'cycle'] + \
                [f'op_setting{i}' for i in range(1, 4)] + \
                [f'sensor{i}' for i in range(1, 22)]

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('/content/train_FD001.txt', sep=' ', header=None, names=column_names)

df

df.isnull().sum()

df.dropna(axis = 1, how = 'all', inplace = True)

df

rul_df = df.groupby('engine_id')['cycle'].max().reset_index()
rul_df.columns = ['engine_id', 'max_cycle']
df = df.merge(rul_df, on='engine_id')
df['RUL'] = df['max_cycle'] - df['cycle']
df.drop('max_cycle', axis=1, inplace=True)

df

selected_features = ['sensor2', 'sensor6', 'sensor7', 'sensor9',
                     'sensor10', 'sensor11', 'sensor12', 'sensor13',
                     'sensor18', 'sensor19']

features = df[selected_features]
target = df['RUL']

features

scaler = MinMaxScaler()
features_scaled = scaler.fit_transform(features)

x_train, x_test, y_train, y_test = train_test_split(
    features_scaled, target, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(x_train, y_train)

preds = model.predict(x_test)
rmse = np.sqrt(mean_squared_error(y_test, preds))
print(f'RMSE: {rmse:.2f}')

plt.figure(figsize=(10, 6))
x = np.arange(100)
plt.plot(x, preds[:100], label='Predicted RUL')
plt.plot(x, y_test[:100], label='Actual RUL')
plt.title('Predicted vs Actual RUL(first 100 test samples)')
plt.xlabel('Sample')
plt.ylabel('RUL')
plt.legend()
plt.grid(True)
plt.show()

